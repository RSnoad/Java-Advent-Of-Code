import java.lang.reflect.Array;



public class Day01_2017 {

    // Function that takes string of digits and sums the digits that match the next digit in the sequence.
    // Ought to merge these two functions, as was done with the python version.
    public static int captcha(String sequence) {
        int total = 0;
        String separated[] = sequence.split("");
        int length = Array.getLength(separated);
        int step = 1;

        for (int i = 0; i < length; i++) {
            if (separated[i].equals(separated[(i + step) % length])) {

                total += Integer.parseInt(separated[i]);
            }
        }
        return total;
    }
    // Function that takes string of digits and sums the digits that match the digit that is halfway around the string,
    // the function is circular i.e. if the comparison goes beyond the end of the string, it wraps back around to the
    // beginning.
    public static int captchaHalfStep(String sequence) {
        int total = 0;
        String separated[] = sequence.split("");
        int length = Array.getLength(separated);
        int step = (Array.getLength(separated))/2;

        for (int i = 0; i < length; i++) {
            if (separated[i].equals(separated[(i + step) % length])) {

                total += Integer.parseInt(separated[i]);
            }
        }
        return total;
    }



    public static int findSolution(){
        String bigNumber = "7773699185668922525314233521474629493231881345484917782346867434651242648277769699334813528753148"+
                "76228451553392354437187982554114927784151573517533779595866128824554647362856484733976811637293451433"+
        "1957725829284961949148674883294442564373789929381181944827154628391459254698927599284438394757292662869561766"+
        "1344293284789225493932487897149244685921644561896799491668147588536732985476538413354195246785378443492137893"+
        "161362862587297219368699689318441563683292683855151652394244688119527728613756153348584975372656877565662527"+
        "4361525514761756444283334492975819393576568437848499657647963652721138374366188573635857838132919997747183554"+
        "794859612447821489942818457176115896126724362437882522122524898339527852912849354396627513392738474246211935"+
        "8795528488591598769281231325155683695857133533428132249525188972428186376563644197117879536541326717879211854"+
        "4937392522893132283573129821178591214594778712292228515169348771198167462495988252456944269678515277886142827"+
        "2188253585617725883779983949849479461219831151589512971563212892314813481269985844559742771232134133598596593"+
        "3979262774247668882757731828557323618783874944421266629317289938553138355114289684717834216312988352369418338"+
        "812356774491675289938626536824534258728152172387255539221259622768441426966769622999597618276258728182953318"+
        "19256962897333255136185711161994197598215971976364152437897577891298245378124283381925364624685543995488935325"+
        "88928486825398895911533744671691387494516395641555683144968644717265849634943691721391779987198764147667349" +
        "2668771492386957141189828417213238532946421753815143473452377212882812548287451228782687926618679947855851" +
        "31534136646954347165597315643658739688567246339618795777125767432162928257331951255792438831957359141651" +
        "6344919127468757483633943298482273918122518128422632772295141254266821797111847177377141782359954314652175" +
        "477592827794998428929935569189777732361961853489657132412113658955196972949825231661962689419768599879255" +
        "78945185217127344619169353395993198368185217391883839449331638641744279836858188235296951745922667612379649" +
        "453277174224722894599153367373494255388826855322712652812127873536473277";

        return captchaHalfStep(bigNumber);

    }
}


